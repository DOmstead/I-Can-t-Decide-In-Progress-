{"version":3,"sources":["Recipe.js","RecipeApi.js","CuisineWheel.js","App.js","index.js"],"names":["RecipeComp","props","state","message","title","id","image","imageUrls","readyInMinutes","servings","instructions","extendedIngredients","this","setState","cuisine","fetch","then","res","ok","json","console","log","Promise","reject","statusText","data","results","recipeApi","instance","Math","ceil","random","ReadyInMinutes","baseIdSearch","searchById","className","map","ingredient","original","src","alt","React","Component","CuisineWheel","isToggleOn","cuisineArr","spinAngleStart","startAngle","spinTime","arc","PI","spinTimer","handleOnClick","bind","spin","rotate","n","String","substr","r","g","b","byte2Hex","item","maxitem","frequency","red","sin","green","blue","RGB2Color","ctx","baseSize","canvas","refs","getContext","outsideRadius","textRadius","insideRadius","clearRect","strokeStyle","lineWidth","font","i","length","angle","fillStyle","getColor","beginPath","fill","save","translate","cos","text","fillText","measureText","width","restore","lineTo","stroke","spinTimeTotal","clearTimeout","stopRotateWheel","spinAngle","easeOut","drawRouletteWheel","setTimeout","degrees","arcd","index","floor","changeCuisine","t","c","d","ts","ref","height","type","value","onClick","defaultProps","App","updateCuisine","food","recipeToggle","prevState","cuisineWheelToggle","newRecipeToggle","newRecipe","startingPage","class","Recipe","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9510dda.chunk.js","sourcesContent":["import React from 'react';\r\nimport {recipeApi,searchById} from './RecipeApi.js';\r\n\r\nclass RecipeComp extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {message: \"Check out this great recipe:\", title:\"\", id:\"\" , image: \"\", imageUrls: \"\", readyInMinutes: \"\", servings: \"\", instructions: \"\", extendedIngredients:\"\"}\r\n  }\r\n\r\n //This function fires when the recipe componenet is mounted. It makes multiple API calls and updates statebased off those calls.  \r\n componentDidMount(){\r\n    this.setState({message: \"Check out this great recipe:\"});\r\n    recipeApi(this.props.cuisine).then(res =>{ \r\n      let instance = res[Math.ceil(Math.random() * 9)];\r\n      console.log(`recipe line 19 ${instance.title}`);\r\n      this.setState({title: instance.title, id:instance.id, image: instance.image, imageUrls: instance.imageUrls, readyInMinutes: instance.ReadyInMinutes, servings: instance.servings});\r\n      searchById(this.state.id).then( res =>{\r\n        // console.log(this.state.id);\r\n        // console.log(res);\r\n        this.setState({instructions: res.instructions,image: res.image,servings: res.servings, extendedIngredients: res.extendedIngredients});\r\n        // console.log(\"This is the line 22 state\")\r\n        // console.log(this.state);\r\n      });\r\n    });\r\n  }\r\n\r\n  //This function was used for debugging during development.\r\n  // componentDidUpdate(){\r\n  //   if(this.state.extendedIngredients !== \"\"){\r\n  //     console.log(\"ComponentDidUpdate Ran\");\r\n  //     console.log(this.state.extendedIngredients);\r\n  //     // this.state.extendedIngredients.map( ingredient => (\r\n  //     //   // <div key={ingredient.name}> {ingredient.name} </div>\r\n  //     //   // console.log(ingrediant.name),\r\n  //     //   // document.querySelector(\".ingrediantList\")\r\n  //     //   this.setState({ingrediant.name: ingrediant.name})\r\n  //       // ))\r\n  //   }\r\n  // }\r\n\r\n  render() {\r\n    console.log(\"The Render function ran\")\r\n    console.log(this.state);\r\n    if(this.state.extendedIngredients !== \"\"){\r\n      return (\r\n      <div className=\"recipe\">\r\n        <h2>{this.state.message}</h2>\r\n        <h3>{this.state.title}</h3>\r\n        <p>Serves {this.state.servings}</p>\r\n        <ul>{this.state.extendedIngredients.map(ingredient => <li>{ingredient.original}</li>)}</ul>\r\n        {/* <p>{this.state.extendedIngredients[0].name}</p> */}\r\n        {/* < Test extendedIngredients={this.state.extendedIngredients} /> */}\r\n        {/* <ul>{this.state.extendedIngredients.map(ingrediant => )}</ul> */}\r\n        {/* <p id= \"ingredientList\" className= \"ingredientList\"></p> */}\r\n        <img src= {this.state.image} alt= 'The Requested Recipe'/>\r\n        <p>{this.state.instructions}</p>\r\n      </div>\r\n      )\r\n    }\r\n      return(\r\n        <div>\r\n        <h2>{this.state.message}</h2>\r\n        <p>Fetching an amazing recipe just for you! </p>\r\n        </div>\r\n      )\r\n    };\r\n  }\r\n\r\nexport default RecipeComp ","import React from 'react';\r\n\r\n//This function is the first of two APi calls. It works by fetching an array of recipes that meet the criteria of the selected cuisine. \r\nfunction recipeApi(cuisine = 'American'){\r\n    const baseSearchUrl= 'https://api.spoonacular.com/recipes/search?'\r\n    const apiKey = 'apiKey=d84963d1ace64944885b02a6e888da90';\r\n    let instructions = 'instructionsRequired=true'\r\n    // console.log('Recipe APi is about to run');\r\n    \r\n    return(\r\n        fetch(`${baseSearchUrl}${apiKey}&cuisine=${cuisine}&${instructions}`)\r\n    ).then(res => {\r\n        if(!res.ok){\r\n            console.log(\"Line 13 ran because something in the API process failed!\")\r\n            return Promise.reject({ message: res.statusText});\r\n        }\r\n        return res.json()\r\n    }).then(\r\n        data => {\r\n            console.log(data)\r\n            console.log(data.results)\r\n            // console.log(data.results[0].title)\r\n            // console.log(typeof data.results[0].title)\r\n            //This was the origionaly used return statement\r\n            // return data.results[0].title\r\n            // return data.results[0]\r\n            return data.results\r\n        }\r\n    )\r\n}\r\n\r\n//This function is the second of two API calls. It works by fetching the specific recipe chosen \r\nfunction searchById(id){\r\n    const baseIdSearch = `https://api.spoonacular.com/recipes/${id}/information?includeNutrition=false`;\r\n    const apiKey = 'apiKey=d84963d1ace64944885b02a6e888da90';\r\n    return(\r\n        fetch(`${baseIdSearch}&${apiKey}`).then(res =>{\r\n            return res.json();\r\n        })\r\n    );\r\n}\r\n\r\nexport {recipeApi, searchById};\r\n","import React from 'react';\r\nimport './CuisineWheel.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CuisineWheel extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {cuisine:\"\", isToggleOn: true, cuisineArr:[\"African\",\"American\",\"British\",\"Cajun\",\"Caribbean\",\"Chinese\",\"European\",\"French\",\"German\",\"Greek\",\"Indian\",\"Irish\",\"Italian\",\"Japanese\",\"Jewish\",\"Korean\",\"Mexican\",\"Southern\",\"Spanish\",\"Thai\",\"Vietnamese\",\"Nordic\"],\r\n        spinAngleStart: 0, startAngle: 0, spinTime: 0, arc: Math.PI / (22 / 2) };\r\n        this.spinTimer = null;\r\n        this.handleOnClick = this.handleOnClick.bind(this);\r\n        this.spin = this.spin.bind(this);\r\n        this.rotate = this.rotate.bind(this);\r\n        // These lines line used during development for debugging\r\n        // this.handleClick = this.handleClick.bind(this)\r\n        // this.myClick = this.myClick.bind(this)\r\n    }\r\n\r\n    static propTypes = {\r\n        className: PropTypes.string,\r\n        options: PropTypes.array,\r\n        baseSize: PropTypes.number,\r\n        spinAngleStart: PropTypes.number,\r\n        spinTimeTotal: PropTypes.number,\r\n        onComplete: PropTypes.func,\r\n      };\r\n\r\n    static defaultProps = {\r\n        baseSize: 275,\r\n        spinAngleStart: Math.random() * 10 + 10,\r\n        spinTimeTotal: Math.random() * 3 + 4 * 1000,\r\n      }\r\n\r\n      //The following three functions handle the color assignment for each section of the RouletteWheel\r\n\r\n      byte2Hex(n) {\r\n        const nybHexString = '0123456789ABCDEF';\r\n        return String(nybHexString.substr((n >> 4) & 0x0F,1)) + nybHexString.substr(n & 0x0F,1);\r\n      }\r\n    \r\n      RGB2Color(r,g,b) {\r\n          return '#' + this.byte2Hex(r) + this.byte2Hex(g) + this.byte2Hex(b);\r\n      }\r\n\r\n      getColor(item, maxitem) {\r\n        const phase = 0;\r\n        const center = 128;\r\n        const width = 128;\r\n        const frequency = Math.PI*2/maxitem;\r\n        const red   = Math.sin(frequency*item+2+phase) * width + center;\r\n        const green = Math.sin(frequency*item+3+phase) * width + center;\r\n        const blue  = Math.sin(frequency*item+4+phase) * width + center;\r\n        return this.RGB2Color(red,green,blue);\r\n      }\r\n\r\n      drawRouletteWheel() {\r\n        // const spinTimeout = null;\r\n        // const spinTime = 0;\r\n        // const spinTimeTotal = 0;\r\n        const { baseSize } = this.props;\r\n        let { startAngle, arc } = this.state;\r\n        let ctx;\r\n        const canvas = this.refs.canvas;\r\n        if (canvas.getContext) {\r\n          const outsideRadius = baseSize - 205;\r\n          const textRadius = baseSize - 45;\r\n          const insideRadius = baseSize - 55;\r\n          ctx = canvas.getContext('2d');\r\n          ctx.clearRect(0,0,600,600);\r\n          ctx.strokeStyle = 'white';\r\n          ctx.lineWidth = 2;\r\n          ctx.font = '14px Helvetica, Arial';\r\n\r\n          //The section below controls the creation of the RouletteWheel\r\n          for(let i = 0; i < this.state.cuisineArr.length; i++) {\r\n            const angle = startAngle + i * arc;\r\n            ctx.fillStyle = this.getColor(i, this.state.cuisineArr.length);\r\n            ctx.beginPath();\r\n            ctx.arc(baseSize, baseSize, outsideRadius, angle, angle + arc, false);\r\n            ctx.arc(baseSize, baseSize, insideRadius, angle + arc, angle, true);\r\n            ctx.fill();\r\n            ctx.save();\r\n            ctx.fillStyle = 'white';\r\n            ctx.translate(baseSize + Math.cos(angle + arc / 2) * textRadius,\r\n                          baseSize + Math.sin(angle + arc / 2) * textRadius);\r\n            ctx.rotate(angle + arc / 2 + Math.PI / 2);\r\n            const text = this.state.cuisineArr[i];\r\n            ctx.fillText(text, -ctx.measureText(text).width / 2, 0);\r\n            ctx.restore();\r\n          }\r\n          //The section below controls the creation and styling for the RouletteWheel arrow symbol.\r\n          ctx.fillStyle = 'red';\r\n          ctx.beginPath();\r\n          ctx.lineTo(baseSize + 10, baseSize - (insideRadius + 5));\r\n          ctx.lineTo(baseSize + 0, baseSize - (insideRadius - 20));\r\n          ctx.lineTo(baseSize - 10, baseSize - (insideRadius + 5));\r\n          ctx.fill();\r\n          ctx.stroke();\r\n        }\r\n      }\r\n\r\n      spin() {\r\n        this.spinTimer = null;\r\n        this.setState({ spinTime: 0}, () => this.rotate());\r\n      }\r\n\r\n      //This section is responsible for the math and function calls related to the rotation animation for the RouletteWheel\r\n      rotate(){\r\n        const { spinAngleStart, spinTimeTotal } = this.props;\r\n        if(this.state.spinTime > 2800) {\r\n          clearTimeout(this.spinTimer);\r\n          this.stopRotateWheel();\r\n        } else {\r\n          const spinAngle = spinAngleStart - this.easeOut(this.state.spinTime, 0, spinAngleStart, spinTimeTotal);\r\n          this.setState({\r\n            startAngle: this.state.startAngle + spinAngle * Math.PI / 180,\r\n            spinTime: this.state.spinTime + 30,\r\n          }, () => {\r\n            this.drawRouletteWheel();\r\n            clearTimeout(this.spinTimer);\r\n            this.spinTimer = setTimeout(() => this.rotate(), 30);\r\n          })\r\n        }\r\n      }\r\n\r\n      //This section controls what happens when the RouletteWheel is set to stop.\r\n      stopRotateWheel() {\r\n        let { startAngle, arc } = this.state;\r\n        const { baseSize } = this.props;\r\n        const canvas = this.refs.canvas;\r\n        const ctx = canvas.getContext('2d');\r\n        const degrees = startAngle * 180 / Math.PI + 90;\r\n        const arcd = arc * 180 / Math.PI;\r\n        const index = Math.floor((360 - degrees % 360) / arcd);\r\n        ctx.save();\r\n        ctx.font = 'bold 25px Roboto, Arial';\r\n        ctx.fillStyle = 'white';\r\n        const text = this.state.cuisineArr[index]\r\n        //The line below controls the positioning of the text that appears inside the wheel.\r\n        ctx.fillText(text, baseSize - ctx.measureText(text).width / 2, baseSize);\r\n        ctx.restore();\r\n        console.log(this.state.spinTime);\r\n        if(this.state.spinTime === 2820){\r\n            this.setState({cuisine: text, spinTime: 0})\r\n            this.props.changeCuisine(text)\r\n        }\r\n      }\r\n\r\n      easeOut(t, b, c, d) {\r\n        const ts = (t/=d)*t;\r\n        const tc = ts*t;\r\n        return b+c*(tc + -3*ts + 3*t);\r\n      }\r\n\r\n      handleOnClick() {\r\n        this.spin();\r\n      }\r\n\r\n    componentDidMount(){\r\n        this.drawRouletteWheel()\r\n        console.log(\"Componenet Mounted. Line 19.\")\r\n    }\r\n\r\n    //These functions were used for debugging during the creation process. \r\n\r\n    // componentDidUpdate(){\r\n    //     if(this.state.cuisine !== \"\"){\r\n    //         console.log(\"Wheel componentDidUpdate Ran\")\r\n    //         console.log(this.state.cuisine);\r\n    //     }\r\n    // }\r\n\r\n    // myClick(food){\r\n    //     console.log(\"i was clicked!!!!\");\r\n    //     this.setState({cuisine:food})\r\n    // }\r\n\r\n    //This is a working example of toggling the state\r\n    // handleClick(){\r\n    //     this.setState(state => ({\r\n    //         isToggleOn: !state.isToggleOn\r\n    //     }));\r\n    //     console.log(this.state.isToggleOn)\r\n    // }\r\n\r\n    // This is a working example of toggling the state\r\n    // handleClick(){\r\n    //     this.setState(food => ({\r\n    //         cuisine: food\r\n    //     }));\r\n    //     console.log(this.state.isToggleOn)\r\n    // }\r\n\r\n    // handleClick(food){\r\n    //         this.setState(state => ({\r\n    //             cuisine: state.food\r\n    //         }))\r\n    // }\r\n\r\n\r\n    render(){\r\n        const { baseSize } = this.props;\r\n\r\n        return(\r\n            <div>\r\n                <h2>Click Choose My Cuisine to get started!</h2>\r\n                <div className=\"roulette\">\r\n                    <div className=\"roulette-container\">\r\n                    <canvas ref=\"canvas\" width={baseSize * 2} height={baseSize * 2} className=\"roulette-canvas\"></canvas>\r\n                    </div>\r\n                    <div className=\"roulette-container\">\r\n                    <input type=\"button\" value=\"Choose My Cuisine\" onClick={this.handleOnClick} className=\"button\" id=\"spin\" />\r\n                    </div>\r\n                </div>\r\n                \r\n                {/* The lines below was previously used to establish a button for each cuisine option */}\r\n                \r\n                {/* {this.state.cuisineArr.map((food, index) => <button key= {index} onClick= { () => {this.props.changeCuisine(food)}}>{food}</button>)} */}\r\n                {/* {this.state.cuisineArr.map((food, index) => <button key= {index} onClick= {() => {this.setState( {cuisine:food}); recipeApi(`${food}`)}}>{food}</button>)} */}\r\n                \r\n                {/* The lines below were used during the devleopment of this componenet and are left in for review reasons */}\r\n                {/* recipeApi(`${food}`) */}\r\n                {/* <button type=\"submit\" onClick={() => { this.props.removeTaskFunction(todo) }}>Submit</button> */}\r\n                {/* <button onClick= {this.handleClick}>African</button> */}\r\n                {/* <button onClick= {this.setState({cuisine:'Jewish'})}>Jewish</button> */}\r\n                {/* <button onClick= {this.myClick()}>Cajun</button> */}\r\n                {/* <button onClick = {(e)=> this.handleClick(e)}>Chinese</button> */}\r\n                {/* <button>Italian</button> */}\r\n                {/* <button onClick= {() => {this.props.changeCuisine(this.state.cuisineArr[Math.floor(Math.random() * 25)] )}}>Choose My Cuisine!</button> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CuisineWheel;\r\n\r\n ","import React from 'react';\nimport './App.css';\nimport RecipeComp from './Recipe.js';\nimport CuisineWheel from './CuisineWheel';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {startingPage: true, CuisineWheel:false, RecipeComp:false, cuisine: \"\", newRecipe:false}\n  }\n\n  updateCuisine = (food) => {\n    this.setState({cuisine: food });\n    // console.log(`updateCuisine ran and got ${food}`)\n    // console.log(this.state.cuisine)\n  }\n\n  recipeToggle = () => {\n    this.setState(prevState => ({RecipeComp: !prevState.RecipeComp}))\n  }\n\n  cuisineWheelToggle = () => {\n    this.setState(prevState => ({CuisineWheel: !prevState.CuisineWheel}))\n  }\n\n  newRecipeToggle = () => {\n    this.setState( prevState => ({newRecipe: !prevState.newRecipe}))\n  }\n  \n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div id= \"homeContainer\">\n          <button class= \"home\" id= \"home\" onClick = {() => this.setState({startingPage: true, CuisineWheel:false, RecipeComp:false, cuisine: \"\", newRecipe:false})}>I Can't Decide Home</button>\n          </div>\n          { this.state.startingPage &&\n          <div>\n            <h1> I Can't Decide!</h1>\n            <h3> An app to help you choose.</h3>\n            <p> Select an option below. </p>\n            <button onClick = {() => {this.setState(prevState => ({CuisineWheel: !prevState.CuisineWheel, startingPage: !prevState.startingPage}))}}>I can't Decide what to cook! </button>\n            {/* <button>Help me choose from a custom list(WIP)</button> */}\n            {/* <button onClick = {() => console.log(this.state)}>Check State</button> */}\n          </div>\n          }\n          {this.state.CuisineWheel && <CuisineWheel changeCuisine={this.updateCuisine} />}\n          {this.state.RecipeComp && <RecipeComp cuisine ={this.state.cuisine}/>}\n          {/* {this.state.cuisine !== \"\" && <button onClick = {this.recipeToggle}>{`${this.state.cuisine} sounds delicious! Show me my recipe!`}</button>} */}\n          {this.state.cuisine !== \"\" && !this.state.newRecipe && <button onClick = {() => {this.recipeToggle(); this.cuisineWheelToggle(); this.newRecipeToggle()}}>{`${this.state.cuisine} sounds delicious! Show me my recipe!`}</button>}\n          {this.state.cuisine !== \"\" && this.state.newRecipe && <button onClick = {() => {this.cuisineWheelToggle(); this.recipeToggle(); this.setState({cuisine:\"\"}); this.newRecipeToggle() }} >{`Let's Try Again`}</button>}\n          {/* <button onClick = {() => console.log(this.state)}>Check State</button> */}\n        </header>\n      </div>\n    );\n  };\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}