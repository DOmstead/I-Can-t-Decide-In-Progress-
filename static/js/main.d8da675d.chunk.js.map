{"version":3,"sources":["RecipeApi.js","Recipe.js","CuisineWheel.js","App.js","index.js"],"names":["apiKey","RecipeComp","props","state","message","title","id","image","imageUrls","readyInMinutes","servings","instructions","analyzedInstructions","extendedIngredients","this","setState","cuisine","fetch","then","res","ok","json","Promise","reject","statusText","data","results","recipeApi","instance","Math","ceil","random","baseIdSearch","searchById","steps","className","map","ingredient","index","key","original","src","alt","item","number","step","React","Component","CuisineWheel","seedrandom","require","rng","rngSpinAngle","rngSpinTime","isToggleOn","spinPressed","cuisineArr","startAngle","spinTime","arc","PI","spinTimer","handleOnClick","bind","spin","rotate","n","String","substr","r","g","b","byte2Hex","maxitem","frequency","red","sin","green","blue","RGB2Color","ctx","baseSize","canvas","refs","getContext","outsideRadius","textRadius","insideRadius","clearRect","strokeStyle","lineWidth","font","i","length","angle","fillStyle","getColor","beginPath","fill","save","translate","cos","text","fillText","measureText","width","restore","lineTo","stroke","clearTimeout","stopRotateWheel","spinAngle","easeOut","drawRouletteWheel","setTimeout","degrees","arcd","floor","changeCuisine","toggleSpinState","t","c","d","ts","ref","height","type","value","onClick","defaultProps","App","updateCuisine","food","recipeToggle","prevState","cuisineWheelToggle","newRecipeToggle","newRecipe","startingPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8da675d.chunk.js","sourcesContent":["const apiKey = 'apiKey=d84963d1ace64944885b02a6e888da90';\r\n\r\n//This function is the first of two APi calls. It works by fetching an array of recipes that meet the criteria of the selected cuisine. \r\nfunction recipeApi(cuisine = 'American'){\r\n    const baseSearchUrl= 'https://api.spoonacular.com/recipes/search?'\r\n    let instructions = 'instructionsRequired=true'   \r\n    return(\r\n        fetch(`${baseSearchUrl}${apiKey}&cuisine=${cuisine}&${instructions}`)\r\n    ).then(res => {\r\n        if(!res.ok){\r\n            return Promise.reject({ message: res.statusText});\r\n        }\r\n        return res.json()\r\n    }).then(\r\n        data => {\r\n            return data.results\r\n        }\r\n    )\r\n}\r\n\r\n//This function is the second of two API calls. It works by fetching the specific recipe chosen \r\nfunction searchById(id){\r\n    const baseIdSearch = `https://api.spoonacular.com/recipes/${id}/information?includeNutrition=false`;\r\n    return(\r\n        fetch(`${baseIdSearch}&${apiKey}`).then(res =>{\r\n            return res.json();\r\n        })\r\n    );\r\n}\r\n\r\nexport {recipeApi, searchById};\r\n","import React from 'react';\r\nimport {recipeApi,searchById} from './RecipeApi.js';\r\nimport './Recipe.css'\r\n\r\nclass RecipeComp extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {message: \"Check out this great recipe:\", title:\"\", id:\"\" , image: \"\", imageUrls: \"\", readyInMinutes: \"1\", servings: \"\", instructions: \"\", analyzedInstructions: \"\", extendedIngredients:\"\"}\r\n  }\r\n\r\n //This function fires when the recipe componenet is mounted. It makes multiple API calls and updates statebased off those calls.  \r\n  componentDidMount(){\r\n    this.setState({message: \"Check out this great recipe:\"});\r\n    recipeApi(this.props.cuisine).then(res =>{ \r\n      let instance = res[Math.ceil(Math.random() * 9)];\r\n      this.setState({title: instance.title, id:instance.id, image: instance.image, imageUrls: instance.imageUrls, readyInMinutes: instance.readyInMinutes, servings: instance.servings});\r\n      searchById(this.state.id).then( res =>{\r\n        this.setState({instructions: res.instructions,analyzedInstructions: res.analyzedInstructions[0].steps, image: res.image,servings: res.servings, extendedIngredients: res.extendedIngredients});\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if(this.state.extendedIngredients !== \"\"){\r\n      return (\r\n      <div className=\"recipe\">\r\n        <h2>{this.state.message}</h2>\r\n        <h3>{this.state.title}</h3>\r\n        <div>\r\n        <p className=\"readyInMinutesAndServings\">Serves {this.state.servings}</p>\r\n        <p className=\"readyInMinutesAndServings\">Total Cook Time: {this.state.readyInMinutes} Minutes</p>\r\n        </div>\r\n        <h2 className=\"ingredientsHeader\">Ingredients</h2>\r\n        <ul className=\"recipeIngredientsContainer\">{this.state.extendedIngredients.map((ingredient,index) => <li className= \"recipeIngredient\" key={index}>{ingredient.original}</li>)}</ul>\r\n        <img src= {this.state.image} alt= 'The Requested Recipe'/>\r\n      <ul className=\"recipeInstructions\">{this.state.analyzedInstructions.map((item,index) => <ul className= 'numberAndStepContainer' key={index + 50}><li className= 'stepNumber' key={index}>{item.number}</li> <li className='stepInstruction' key={index + 80}>{item.step}</li></ul>)}</ul>\r\n      </div>\r\n      )\r\n    }\r\n    return(\r\n      <div>\r\n      <h2>{this.state.message}</h2>\r\n      <p>Fetching an amazing recipe just for you! </p>\r\n      <div className=\"loading\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n      </div>\r\n    )\r\n    };\r\n  }\r\n\r\nexport default RecipeComp ","import React from 'react';\r\nimport './CuisineWheel.css';\r\nimport PropTypes from 'prop-types';\r\nimport seedrandom from 'seedrandom';\r\n\r\n\r\nclass CuisineWheel extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {cuisine:\"\", isToggleOn: true, spinPressed: false, cuisineArr:[\"African\",\"American\",\"British\",\"Cajun\",\"Caribbean\",\"Chinese\",\"European\",\"French\",\"German\",\"Greek\",\"Indian\",\"Irish\",\"Italian\",\"Japanese\",\"Jewish\",\"Korean\",\"Mexican\",\"Southern\",\"Spanish\",\"Thai\",\"Vietnamese\",\"Nordic\"],\r\n        rngSpinAngle: 0, startAngle: 0, spinTime: 0, arc: Math.PI / (22 / 2) };\r\n        this.spinTimer = null;\r\n        this.handleOnClick = this.handleOnClick.bind(this);\r\n        this.spin = this.spin.bind(this);\r\n        this.rotate = this.rotate.bind(this);\r\n    }\r\n\r\n    //The following variables, along with the corresponding import, create a seedable Math.random() style function for more \r\n    //effective random number generation.\r\n\r\n    seedrandom = require('seedrandom');\r\n    rng = seedrandom();\r\n    rngSpinAngle = this.rng() * 22 + 22;\r\n    rngSpinTime = this.rng() * 3 + 4 * 1000;\r\n\r\n    //These items establish the correct type for each variable\r\n    static propTypes = {\r\n        className: PropTypes.string,\r\n        options: PropTypes.array,\r\n        baseSize: PropTypes.number,\r\n        rngSpinAngle: PropTypes.number,\r\n        rngSpinTime: PropTypes.number,\r\n        onComplete: PropTypes.func,\r\n      };\r\n\r\n    static defaultProps = {\r\n        baseSize: 275,\r\n      }\r\n\r\n      //The following three functions handle the color assignment for each section of the RouletteWheel\r\n\r\n      byte2Hex(n) {\r\n        const nybHexString = '0123456789ABCDEF';\r\n        return String(nybHexString.substr((n >> 4) & 0x0F,1)) + nybHexString.substr(n & 0x0F,1);\r\n      }\r\n    \r\n      RGB2Color(r,g,b) {\r\n          return '#' + this.byte2Hex(r) + this.byte2Hex(g) + this.byte2Hex(b);\r\n      }\r\n\r\n      getColor(item, maxitem) {\r\n        const phase = 0;\r\n        const center = 128;\r\n        const width = 128;\r\n        const frequency = Math.PI*2/maxitem;\r\n        const red   = Math.sin(frequency*item+2+phase) * width + center;\r\n        const green = Math.sin(frequency*item+3+phase) * width + center;\r\n        const blue  = Math.sin(frequency*item+4+phase) * width + center;\r\n        return this.RGB2Color(red,green,blue);\r\n      }\r\n\r\n      //This section sets up the basic paramaters for the RouletteWheel.\r\n      drawRouletteWheel() {\r\n        const { baseSize } = this.props;\r\n        let { startAngle, arc } = this.state;\r\n        let ctx;\r\n        const canvas = this.refs.canvas;\r\n        if (canvas.getContext) {\r\n          const outsideRadius = baseSize - 205;\r\n          const textRadius = baseSize - 45;\r\n          const insideRadius = baseSize - 55;\r\n          ctx = canvas.getContext('2d');\r\n          ctx.clearRect(0,0,600,600);\r\n          ctx.strokeStyle = 'white';\r\n          ctx.lineWidth = 2;\r\n          ctx.font = '14px Helvetica, Arial';\r\n\r\n          //The section below controls the creation of the RouletteWheel\r\n          for(let i = 0; i < this.state.cuisineArr.length; i++) {\r\n            const angle = startAngle + i * arc;\r\n            ctx.fillStyle = this.getColor(i, this.state.cuisineArr.length);\r\n            ctx.beginPath();\r\n            ctx.arc(baseSize, baseSize, outsideRadius, angle, angle + arc, false);\r\n            ctx.arc(baseSize, baseSize, insideRadius, angle + arc, angle, true);\r\n            ctx.fill();\r\n            ctx.save();\r\n            ctx.fillStyle = 'white';\r\n            ctx.translate(baseSize + Math.cos(angle + arc / 2) * textRadius,\r\n                          baseSize + Math.sin(angle + arc / 2) * textRadius);\r\n            ctx.rotate(angle + arc / 2 + Math.PI / 2);\r\n            const text = this.state.cuisineArr[i];\r\n            ctx.fillText(text, -ctx.measureText(text).width / 2, 0);\r\n            ctx.restore();\r\n          }\r\n          \r\n          //The section below controls the creation and styling for the RouletteWheel arrow symbol.\r\n          ctx.fillStyle = 'red';\r\n          ctx.beginPath();\r\n          ctx.lineTo(baseSize + 10, baseSize - (insideRadius + 5));\r\n          ctx.lineTo(baseSize + 0, baseSize - (insideRadius - 20));\r\n          ctx.lineTo(baseSize - 10, baseSize - (insideRadius + 5));\r\n          ctx.fill();\r\n          ctx.stroke();\r\n        }\r\n      }\r\n\r\n      spin() {\r\n        this.spinTimer = null;\r\n        this.setState({ spinTime: 0}, () => this.rotate());\r\n      }\r\n\r\n      //This section is responsible for the math and function calls related to the rotation animation for the RouletteWheel\r\n      rotate(){\r\n        if(this.state.spinTime > 2800) {\r\n          clearTimeout(this.spinTimer);\r\n          this.stopRotateWheel();\r\n        } else {\r\n          const spinAngle = this.rngSpinAngle - this.easeOut(this.state.spinTime, 0, this.rngSpinAngle, this.rngSpinTime);\r\n          \r\n          this.setState({\r\n            startAngle: this.state.startAngle + spinAngle * Math.PI / 180,\r\n            spinTime: this.state.spinTime + 30,\r\n          }, () => {\r\n            this.drawRouletteWheel();\r\n            clearTimeout(this.spinTimer);\r\n            this.spinTimer = setTimeout(() => this.rotate(), 30);\r\n          })\r\n        }\r\n      }\r\n\r\n      //This section controls what happens when the RouletteWheel is set to stop. It is responsible for the visual effect and\r\n      //setting the corresponding state.\r\n      stopRotateWheel() {\r\n        let { startAngle, arc } = this.state;\r\n        const { baseSize } = this.props;\r\n        const canvas = this.refs.canvas;\r\n        const ctx = canvas.getContext('2d');\r\n        const degrees = startAngle * 180 / Math.PI + 90;\r\n        const arcd = arc * 180 / Math.PI;\r\n        const index = Math.floor((360 - degrees % 360) / arcd);\r\n        ctx.save();\r\n        ctx.font = 'bold 25px Roboto, Arial';\r\n        ctx.fillStyle = 'white';\r\n        const text = this.state.cuisineArr[index]\r\n        ctx.fillText(text, baseSize - ctx.measureText(text).width / 2, baseSize);\r\n        ctx.restore();\r\n        if(this.state.spinTime === 2820){\r\n            this.setState({cuisine: text, spinTime: 0})\r\n            this.props.changeCuisine(text)\r\n            this.toggleSpinState();\r\n        }\r\n      }\r\n\r\n      easeOut(t, b, c, d) {\r\n        const ts = (t/=d)*t;\r\n        const tc = ts*t;\r\n        return b+c*(tc + -3*ts + 3*t);\r\n      }\r\n\r\n      handleOnClick() {\r\n        this.spin();\r\n      }\r\n\r\n      componentDidMount(){\r\n        this.drawRouletteWheel()\r\n      }\r\n\r\n      toggleSpinState(){\r\n          this.setState({spinPressed: true});\r\n      }\r\n\r\n    render(){\r\n        const { baseSize } = this.props;\r\n        return(\r\n            <div>\r\n                <h2>Click the SPIN button to get started!</h2>\r\n                <div className=\"roulette\">\r\n                    <div className=\"roulette-container\">\r\n                    <canvas ref=\"canvas\" width={baseSize * 2} height={baseSize * 2} className=\"roulette-canvas\"></canvas>\r\n                    </div>\r\n                    <div className=\"roulette-container\">\r\n                    {this.state.spinPressed === false && <input type=\"button\" value=\"SPIN\" onClick={this.handleOnClick} className=\"button\" id=\"spinButton\" />}\r\n                    {this.state.spinPressed && <input type=\"button\" value=\"Spin Again\" onClick={this.handleOnClick} className=\"button\" id=\"spinButton2\" />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CuisineWheel;\r\n\r\n ","import React from 'react';\nimport './App.css';\nimport RecipeComp from './Recipe.js';\nimport CuisineWheel from './CuisineWheel';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {startingPage: true, CuisineWheel:false, RecipeComp:false, cuisine: \"\", newRecipe:false}\n  }\n\n  updateCuisine = (food) => {\n    this.setState({cuisine: food });\n  }\n\n  recipeToggle = () => {\n    this.setState(prevState => ({RecipeComp: !prevState.RecipeComp}))\n  }\n\n  cuisineWheelToggle = () => {\n    this.setState(prevState => ({CuisineWheel: !prevState.CuisineWheel}))\n  }\n\n  newRecipeToggle = () => {\n    this.setState( prevState => ({newRecipe: !prevState.newRecipe}))\n  }\n  \n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className= \"homeContainer\">\n          <button className= \"home\" onClick = {() => this.setState({startingPage: true, CuisineWheel:false, RecipeComp:false, cuisine: \"\", newRecipe:false})}>Home</button>\n          </div>\n          { this.state.startingPage &&\n          <div>\n            <h1> I Can't Decide!</h1>\n            <h3> An app to help you choose</h3>\n            <p> Click below to get started! </p>\n            <button className=\"getStartedButton\" onClick = {() => {this.setState(prevState => ({CuisineWheel: !prevState.CuisineWheel, startingPage: !prevState.startingPage}))}}>I Can't Decide what to cook! </button>\n          </div>\n          }\n          {this.state.CuisineWheel && <CuisineWheel changeCuisine={this.updateCuisine} />}\n          {this.state.RecipeComp && <RecipeComp cuisine ={this.state.cuisine}/>}\n          {this.state.cuisine !== \"\" && !this.state.newRecipe && <button className=\"displayRecipe\" onClick = {() => {this.recipeToggle(); this.cuisineWheelToggle(); this.newRecipeToggle()}}>{`${this.state.cuisine} sounds delicious! Show me my recipe!`}</button>}\n          {this.state.cuisine !== \"\" && this.state.newRecipe && <button className= \"tryAgain\" onClick = {() => {this.cuisineWheelToggle(); this.recipeToggle(); this.setState({cuisine:\"\"}); this.newRecipeToggle() }} >{`Let's Try Again`}</button>}\n        </header>\n      </div>\n    );\n  };\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}